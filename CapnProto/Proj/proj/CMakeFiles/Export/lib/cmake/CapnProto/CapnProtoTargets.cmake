# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget CapnProto::kj CapnProto::kj-test CapnProto::kj-async CapnProto::kj-http CapnProto::kj-gzip CapnProto::capnp CapnProto::capnp-rpc CapnProto::capnp-json CapnProto::capnpc CapnProto::capnp_tool CapnProto::capnpc_cpp CapnProto::capnpc_capnp)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target CapnProto::kj
add_library(CapnProto::kj STATIC IMPORTED)

set_target_properties(CapnProto::kj PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_generic_lambdas"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target CapnProto::kj-test
add_library(CapnProto::kj-test STATIC IMPORTED)

set_target_properties(CapnProto::kj-test PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::kj"
)

# Create imported target CapnProto::kj-async
add_library(CapnProto::kj-async STATIC IMPORTED)

set_target_properties(CapnProto::kj-async PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::kj;ws2_32"
)

# Create imported target CapnProto::kj-http
add_library(CapnProto::kj-http STATIC IMPORTED)

set_target_properties(CapnProto::kj-http PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::kj-async;CapnProto::kj"
)

# Create imported target CapnProto::kj-gzip
add_library(CapnProto::kj-gzip STATIC IMPORTED)

# Create imported target CapnProto::capnp
add_library(CapnProto::capnp STATIC IMPORTED)

set_target_properties(CapnProto::capnp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "CapnProto::kj"
)

# Create imported target CapnProto::capnp-rpc
add_library(CapnProto::capnp-rpc STATIC IMPORTED)

set_target_properties(CapnProto::capnp-rpc PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::capnp;CapnProto::kj-async;CapnProto::kj"
)

# Create imported target CapnProto::capnp-json
add_library(CapnProto::capnp-json STATIC IMPORTED)

set_target_properties(CapnProto::capnp-json PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::capnp;CapnProto::kj-async;CapnProto::kj"
)

# Create imported target CapnProto::capnpc
add_library(CapnProto::capnpc STATIC IMPORTED)

set_target_properties(CapnProto::capnpc PROPERTIES
  INTERFACE_LINK_LIBRARIES "CapnProto::capnp;CapnProto::kj"
)

# Create imported target CapnProto::capnp_tool
add_executable(CapnProto::capnp_tool IMPORTED)

# Create imported target CapnProto::capnpc_cpp
add_executable(CapnProto::capnpc_cpp IMPORTED)

# Create imported target CapnProto::capnpc_capnp
add_executable(CapnProto::capnpc_capnp IMPORTED)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/CapnProtoTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
