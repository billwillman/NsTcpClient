// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test-import2.capnp

#include "test-import2.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<64> b_f6bd77f100ecb0ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255, 176, 236,   0, 241, 119, 189, 246,
     25,   0,   0,   0,   1,   0,   0,   0,
     74,  18, 138,  51, 240,  59,  74, 198,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 116, 101,
    115, 116,  45, 105, 109, 112, 111, 114,
    116,  50,  46,  99,  97, 112, 110, 112,
     58,  84, 101, 115, 116,  73, 109, 112,
    111, 114, 116,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    253,  99,  11, 184,  20, 243, 168, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     23, 164,  35, 249,  76, 171, 130, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 122,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    151,  93,  43, 103, 139, 176,  85, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6bd77f100ecb0ff = b_f6bd77f100ecb0ff.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f6bd77f100ecb0ff[] = {
  &s_a0a8f314b80b63fd,
  &s_bc55b08b672b5d97,
  &s_e682ab4cf923a417,
};
static const uint16_t m_f6bd77f100ecb0ff[] = {1, 2, 0};
static const uint16_t i_f6bd77f100ecb0ff[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f6bd77f100ecb0ff = {
  0xf6bd77f100ecb0ff, b_f6bd77f100ecb0ff.words, 64, d_f6bd77f100ecb0ff, m_f6bd77f100ecb0ff,
  3, 3, i_f6bd77f100ecb0ff, nullptr, nullptr, { &s_f6bd77f100ecb0ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// TestImport2
constexpr uint16_t TestImport2::_capnpPrivate::dataWordSize;
constexpr uint16_t TestImport2::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestImport2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestImport2::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



