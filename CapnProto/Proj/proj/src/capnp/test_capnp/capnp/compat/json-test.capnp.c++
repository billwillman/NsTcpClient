// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: json-test.capnp

#include "json-test.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<301> b_a814a516cf478f04 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     29,   0,   0,   0,   1,   0,   4,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
     16,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  23,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     56,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,  82,   0,   0,   0,
    125,   1,   0,   0,  31,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    215, 155,  50, 168,  96,  63,  29, 205,
    181,   1,   0,   0,  58,   0,   0,   0,
    181,   1,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    169, 212, 152, 196,  72, 251,  86, 150,
    193,   1,   0,   0, 114,   0,   0,   0,
    197,   1,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    132,  97,  52, 225, 113,  58,  53, 145,
    213,   1,   0,   0,  58,   0,   0,   0,
    213,   1,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   2,   0,   0,   3,   0,   1,   0,
     24,   2,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     51, 112, 144,  73, 190,  59,  71, 215,
     21,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   1,   0,   0,   3,   0,   1,   0,
     24,   2,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   2,   0,   0,   3,   0,   1,   0,
     32,   2,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   2,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   2,   0,   0,   3,   0,   1,   0,
     44,   2,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   2,   0,   0,  90,   0,   0,   0,
     45,   2,   0,   0,  31,   0,   0,   0,
     72,   2,   0,   0,   3,   0,   1,   0,
     84,   2,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   2,   0,   0,  66,   0,   0,   0,
     81,   2,   0,   0,  31,   0,   0,   0,
    108,   2,   0,   0,   3,   0,   1,   0,
    120,   2,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     78,  98, 152,  63,  12,  39,  31, 175,
    117,   2,   0,   0,  58,   0,   0,   0,
    117,   2,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   2,   0,   0,   3,   0,   1,   0,
    180,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    164,  57,  86,   3,  65, 188, 238, 202,
    177,   2,   0,   0, 114,   0,   0,   0,
    181,   2,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,  70, 105, 101, 108,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  18,   1,   0,   0,
    110,  97, 109, 101, 115,  45,  99,  97,
    110,  95,  99, 111, 110, 116,  97, 105,
    110,  33,  97, 110, 121, 116, 104, 105,
    110, 103,  32,  82, 101,  97, 108, 108,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  71, 114, 111, 117, 112,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 101, 102, 105, 120, 101, 100,
     71, 114, 111, 117, 112,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  42,   0,   0,   0,
    112, 102, 120,  46,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  85, 110, 105, 111, 110,   0,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
     16,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
     24,   0,   0,   0,   2,   0,   1,   0,
     48,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   2,   0,
      5,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 111, 110,  45, 116, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 101, 110, 100, 101, 110,
     99, 121,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60,  20,  88, 107, 250, 246,  38, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 109, 112, 108, 101,  71, 114,
    111, 117, 112,   0,   0,   0,   0,   0,
    101, 110, 117, 109, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    187,  45, 178, 246,  61, 111, 167, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 110, 101, 114,  74, 115, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  70, 105,
    101, 108, 100,  72,  97, 110, 100, 108,
    101, 114,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  66,  97, 115, 101,
     54,  52,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     75,  62,  37,  10,  69, 121, 216, 215,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  72, 101, 120,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  85, 110, 105, 111, 110,   0,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
     16,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
     24,   0,   0,   0,   2,   0,   1,   0,
     44,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  58,   0,   0,   0,
     98,  86,  97, 108, 117, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 101, 114, 110,  97, 108,
     85, 110, 105, 111, 110,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     95, 130, 124, 206, 101,  48,  83, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 111, 110,  87, 105, 116,
    104,  86, 111, 105, 100,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
      4,   0,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   2,   0,
      5,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a814a516cf478f04 = b_a814a516cf478f04.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a814a516cf478f04[] = {
  &s_91353a71e1346184,
  &s_9656fb48c498d4a9,
  &s_a3fa7845f919dd83,
  &s_af1f270c3f98624e,
  &s_caeebc41035639a4,
  &s_cd1d3f60a8329bd7,
  &s_d5533065ce7c825f,
  &s_d7473bbe49907033,
  &s_eca76f3df6b22dbb,
  &s_f726f6fa6b58143c,
};
static const uint16_t m_a814a516cf478f04[] = {1, 3, 11, 8, 4, 6, 12, 7, 2, 5, 0, 9, 10, 13};
static const uint16_t i_a814a516cf478f04[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
const ::capnp::_::RawSchema s_a814a516cf478f04 = {
  0xa814a516cf478f04, b_a814a516cf478f04.words, 301, d_a814a516cf478f04, m_a814a516cf478f04,
  10, 14, i_a814a516cf478f04, nullptr, nullptr, { &s_a814a516cf478f04, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<86> b_cd1d3f60a8329bd7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 155,  50, 168,  96,  63,  29, 205,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  71, 114, 111, 117, 112,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    126, 238, 165, 189, 228,  63, 171, 177,
    105,   0,   0,   0,  66,   0,   0,   0,
    105,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    148, 140, 254, 113,  12,  62, 138, 195,
    121,   0,   0,   0,  90,   0,   0,   0,
    125,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108,  97, 116,  70, 111, 111,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108,  97, 116,  66,  97, 114,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108,  97, 116,  66,  97, 122,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 130,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
    102, 108,  97, 116,  66,  97, 122,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 117,  98, 108, 101,  70, 108,
     97, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd1d3f60a8329bd7 = b_cd1d3f60a8329bd7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cd1d3f60a8329bd7[] = {
  &s_a814a516cf478f04,
  &s_b1ab3fe4bda5ee7e,
  &s_c38a3e0c71fe8c94,
};
static const uint16_t m_cd1d3f60a8329bd7[] = {3, 1, 2, 0};
static const uint16_t i_cd1d3f60a8329bd7[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_cd1d3f60a8329bd7 = {
  0xcd1d3f60a8329bd7, b_cd1d3f60a8329bd7.words, 86, d_cd1d3f60a8329bd7, m_cd1d3f60a8329bd7,
  3, 4, i_cd1d3f60a8329bd7, nullptr, nullptr, { &s_cd1d3f60a8329bd7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_b1ab3fe4bda5ee7e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126, 238, 165, 189, 228,  63, 171, 177,
     56,   0,   0,   0,   1,   0,   4,   0,
    215, 155,  50, 168,  96,  63,  29, 205,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  71, 114, 111, 117, 112,  46,
    102, 108,  97, 116,  66,  97, 122,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,  32,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    104, 101, 108, 108, 111,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1ab3fe4bda5ee7e = b_b1ab3fe4bda5ee7e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1ab3fe4bda5ee7e[] = {
  &s_cd1d3f60a8329bd7,
};
static const uint16_t m_b1ab3fe4bda5ee7e[] = {0};
static const uint16_t i_b1ab3fe4bda5ee7e[] = {0};
const ::capnp::_::RawSchema s_b1ab3fe4bda5ee7e = {
  0xb1ab3fe4bda5ee7e, b_b1ab3fe4bda5ee7e.words, 36, d_b1ab3fe4bda5ee7e, m_b1ab3fe4bda5ee7e,
  1, 1, i_b1ab3fe4bda5ee7e, nullptr, nullptr, { &s_b1ab3fe4bda5ee7e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_c38a3e0c71fe8c94 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 140, 254, 113,  12,  62, 138, 195,
     56,   0,   0,   0,   1,   0,   4,   0,
    215, 155,  50, 168,  96,  63,  29, 205,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  71, 114, 111, 117, 112,  46,
    100, 111, 117,  98, 108, 101,  70, 108,
     97, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 116,  81, 117, 120,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c38a3e0c71fe8c94 = b_c38a3e0c71fe8c94.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c38a3e0c71fe8c94[] = {
  &s_cd1d3f60a8329bd7,
};
static const uint16_t m_c38a3e0c71fe8c94[] = {0};
static const uint16_t i_c38a3e0c71fe8c94[] = {0};
const ::capnp::_::RawSchema s_c38a3e0c71fe8c94 = {
  0xc38a3e0c71fe8c94, b_c38a3e0c71fe8c94.words, 37, d_c38a3e0c71fe8c94, m_c38a3e0c71fe8c94,
  1, 1, i_c38a3e0c71fe8c94, nullptr, nullptr, { &s_c38a3e0c71fe8c94, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_9656fb48c498d4a9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    169, 212, 152, 196,  72, 251,  86, 150,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46, 112, 114, 101, 102, 105, 120, 101,
    100,  71, 114, 111, 117, 112,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  34,   0,   0,   0,
    101,   0,   0,   0,  31,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    221, 227,  96,  53,  23,  84,  89, 209,
    145,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    234,  64, 226,  31, 140, 206, 135, 196,
    121,   0,   0,   0,  90,   0,   0,   0,
    125,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
     98,  97, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 122,   0,   0,   0,   0,   0,
    109, 111, 114, 101,  80, 114, 101, 102,
    105, 120,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  42,   0,   0,   0,
    120, 102, 112,  46,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9656fb48c498d4a9 = b_9656fb48c498d4a9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9656fb48c498d4a9[] = {
  &s_a814a516cf478f04,
  &s_c487ce8c1fe240ea,
  &s_d15954173560e3dd,
};
static const uint16_t m_9656fb48c498d4a9[] = {1, 2, 0, 3};
static const uint16_t i_9656fb48c498d4a9[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9656fb48c498d4a9 = {
  0x9656fb48c498d4a9, b_9656fb48c498d4a9.words, 88, d_9656fb48c498d4a9, m_9656fb48c498d4a9,
  3, 4, i_9656fb48c498d4a9, nullptr, nullptr, { &s_9656fb48c498d4a9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_d15954173560e3dd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221, 227,  96,  53,  23,  84,  89, 209,
     63,   0,   0,   0,   1,   0,   4,   0,
    169, 212, 152, 196,  72, 251,  86, 150,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46, 112, 114, 101, 102, 105, 120, 101,
    100,  71, 114, 111, 117, 112,  46,  98,
     97, 122,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,  33,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    104, 101, 108, 108, 111,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d15954173560e3dd = b_d15954173560e3dd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d15954173560e3dd[] = {
  &s_9656fb48c498d4a9,
};
static const uint16_t m_d15954173560e3dd[] = {0};
static const uint16_t i_d15954173560e3dd[] = {0};
const ::capnp::_::RawSchema s_d15954173560e3dd = {
  0xd15954173560e3dd, b_d15954173560e3dd.words, 37, d_d15954173560e3dd, m_d15954173560e3dd,
  1, 1, i_d15954173560e3dd, nullptr, nullptr, { &s_d15954173560e3dd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_c487ce8c1fe240ea = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    234,  64, 226,  31, 140, 206, 135, 196,
     63,   0,   0,   0,   1,   0,   4,   0,
    169, 212, 152, 196,  72, 251,  86, 150,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46, 112, 114, 101, 102, 105, 120, 101,
    100,  71, 114, 111, 117, 112,  46, 109,
    111, 114, 101,  80, 114, 101, 102, 105,
    120,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    113, 117, 120,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c487ce8c1fe240ea = b_c487ce8c1fe240ea.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c487ce8c1fe240ea[] = {
  &s_9656fb48c498d4a9,
};
static const uint16_t m_c487ce8c1fe240ea[] = {0};
static const uint16_t i_c487ce8c1fe240ea[] = {0};
const ::capnp::_::RawSchema s_c487ce8c1fe240ea = {
  0xc487ce8c1fe240ea, b_c487ce8c1fe240ea.words, 38, d_c487ce8c1fe240ea, m_c487ce8c1fe240ea,
  1, 1, i_c487ce8c1fe240ea, nullptr, nullptr, { &s_c487ce8c1fe240ea, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_91353a71e1346184 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132,  97,  52, 225, 113,  58,  53, 145,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   2,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  85, 110, 105, 111, 110,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,  28, 231, 206, 201, 164, 126, 140,
     41,   0,   0,   0,  34,   0,   0,   0,
     41,   0,   0,   0,  31,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    135, 100, 190, 234, 140, 164, 163, 242,
     53,   0,   0,   0,  34,   0,   0,   0,
     53,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
     16,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
     24,   0,   0,   0,   2,   0,   1,   0,
     40,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
     98,  97, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91353a71e1346184 = b_91353a71e1346184.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_91353a71e1346184[] = {
  &s_8c7ea4c9cee71c10,
  &s_a814a516cf478f04,
  &s_f2a3a48ceabe6487,
};
static const uint16_t m_91353a71e1346184[] = {1, 0};
static const uint16_t i_91353a71e1346184[] = {0, 1};
const ::capnp::_::RawSchema s_91353a71e1346184 = {
  0x91353a71e1346184, b_91353a71e1346184.words, 63, d_91353a71e1346184, m_91353a71e1346184,
  3, 2, i_91353a71e1346184, nullptr, nullptr, { &s_91353a71e1346184, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_8c7ea4c9cee71c10 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     16,  28, 231, 206, 201, 164, 126, 140,
     56,   0,   0,   0,   1,   0,   4,   0,
    132,  97,  52, 225, 113,  58,  53, 145,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  85, 110, 105, 111, 110,  46,
    102, 111, 111,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,  77, 101, 109,  98, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 117, 108, 116, 105,  77, 101, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c7ea4c9cee71c10 = b_8c7ea4c9cee71c10.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c7ea4c9cee71c10[] = {
  &s_91353a71e1346184,
};
static const uint16_t m_8c7ea4c9cee71c10[] = {0, 1};
static const uint16_t i_8c7ea4c9cee71c10[] = {0, 1};
const ::capnp::_::RawSchema s_8c7ea4c9cee71c10 = {
  0x8c7ea4c9cee71c10, b_8c7ea4c9cee71c10.words, 53, d_8c7ea4c9cee71c10, m_8c7ea4c9cee71c10,
  1, 2, i_8c7ea4c9cee71c10, nullptr, nullptr, { &s_8c7ea4c9cee71c10, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_f2a3a48ceabe6487 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    135, 100, 190, 234, 140, 164, 163, 242,
     56,   0,   0,   0,   1,   0,   4,   0,
    132,  97,  52, 225, 113,  58,  53, 145,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  97,  85, 110, 105, 111, 110,  46,
     98,  97, 114,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
     98,  97, 114,  77, 101, 109,  98, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 117, 108, 116, 105,  77, 101, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f2a3a48ceabe6487 = b_f2a3a48ceabe6487.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f2a3a48ceabe6487[] = {
  &s_91353a71e1346184,
};
static const uint16_t m_f2a3a48ceabe6487[] = {0, 1};
static const uint16_t i_f2a3a48ceabe6487[] = {0, 1};
const ::capnp::_::RawSchema s_f2a3a48ceabe6487 = {
  0xf2a3a48ceabe6487, b_f2a3a48ceabe6487.words, 53, d_f2a3a48ceabe6487, m_f2a3a48ceabe6487,
  1, 2, i_f2a3a48ceabe6487, nullptr, nullptr, { &s_f2a3a48ceabe6487, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<46> b_d7473bbe49907033 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51, 112, 144,  73, 190,  59,  71, 215,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46, 115, 105, 109, 112, 108, 101,  71,
    114, 111, 117, 112,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
     13,   0,   0,   0,  31,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    103, 114,  97, 117, 108, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 122,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
    103, 114,  97, 117, 108, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7473bbe49907033 = b_d7473bbe49907033.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d7473bbe49907033[] = {
  &s_a814a516cf478f04,
};
static const uint16_t m_d7473bbe49907033[] = {0};
static const uint16_t i_d7473bbe49907033[] = {0};
const ::capnp::_::RawSchema s_d7473bbe49907033 = {
  0xd7473bbe49907033, b_d7473bbe49907033.words, 46, d_d7473bbe49907033, m_d7473bbe49907033,
  1, 1, i_d7473bbe49907033, nullptr, nullptr, { &s_d7473bbe49907033, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_af1f270c3f98624e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     78,  98, 152,  63,  12,  39,  31, 175,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   2,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46,  98,  85, 110, 105, 111, 110,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,  13,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   5,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
     45,   0,   0,   0,  31,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
     98,  97, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af1f270c3f98624e = b_af1f270c3f98624e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_af1f270c3f98624e[] = {
  &s_a814a516cf478f04,
};
static const uint16_t m_af1f270c3f98624e[] = {1, 0};
static const uint16_t i_af1f270c3f98624e[] = {0, 1};
const ::capnp::_::RawSchema s_af1f270c3f98624e = {
  0xaf1f270c3f98624e, b_af1f270c3f98624e.words, 60, d_af1f270c3f98624e, m_af1f270c3f98624e,
  1, 2, i_af1f270c3f98624e, nullptr, nullptr, { &s_af1f270c3f98624e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_caeebc41035639a4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    164,  57,  86,   3,  65, 188, 238, 202,
     49,   0,   0,   0,   1,   0,   4,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
     16,   0,   7,   0,   1,   0,   3,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     46, 117, 110, 105, 111, 110,  87, 105,
    116, 104,  86, 111, 105, 100,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   6,   0,   0,   0,
      0,   0,   1,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  24,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,  15,   0,   0,   0,
      0,   0,   1,   0,  25,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 116,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 105, 100,  86,  97, 108, 117,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  86,  97, 108, 117,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_caeebc41035639a4 = b_caeebc41035639a4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_caeebc41035639a4[] = {
  &s_a814a516cf478f04,
};
static const uint16_t m_caeebc41035639a4[] = {0, 2, 1};
static const uint16_t i_caeebc41035639a4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_caeebc41035639a4 = {
  0xcaeebc41035639a4, b_caeebc41035639a4.words, 69, d_caeebc41035639a4, m_caeebc41035639a4,
  1, 3, i_caeebc41035639a4, nullptr, nullptr, { &s_caeebc41035639a4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<61> b_f726f6fa6b58143c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60,  20,  88, 107, 250, 246,  38, 247,
     29,   0,   0,   0,   1,   0,   0,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     50,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
     41,   0,   0,   0,  31,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
    102, 111, 111,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 121,  99, 108, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4, 143,  71, 207,  22, 165,  20, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f726f6fa6b58143c = b_f726f6fa6b58143c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f726f6fa6b58143c[] = {
  &s_a814a516cf478f04,
};
static const uint16_t m_f726f6fa6b58143c[] = {1, 0};
static const uint16_t i_f726f6fa6b58143c[] = {0, 1};
const ::capnp::_::RawSchema s_f726f6fa6b58143c = {
  0xf726f6fa6b58143c, b_f726f6fa6b58143c.words, 61, d_f726f6fa6b58143c, m_f726f6fa6b58143c,
  1, 2, i_f726f6fa6b58143c, nullptr, nullptr, { &s_f726f6fa6b58143c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<71> b_d5533065ce7c825f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     95, 130, 124, 206, 101,  48,  83, 213,
     29,   0,   0,   0,   1,   0,   1,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
      1,   0,   7,   0,   0,   0,   2,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
     45,   0,   0,   0,  31,   0,   0,   0,
     85,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 105, 111, 110, 115,
     51,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
      4,   0,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   2,   0,
      5,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
     45,   0,   0,   0,  31,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
      4,   0,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    248, 173,  65,  81, 235, 148, 204, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5533065ce7c825f = b_d5533065ce7c825f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5533065ce7c825f[] = {
  &s_b1cc94eb5141adf8,
};
static const uint16_t m_d5533065ce7c825f[] = {1, 0};
static const uint16_t i_d5533065ce7c825f[] = {0, 1};
const ::capnp::_::RawSchema s_d5533065ce7c825f = {
  0xd5533065ce7c825f, b_d5533065ce7c825f.words, 71, d_d5533065ce7c825f, m_d5533065ce7c825f,
  1, 2, i_d5533065ce7c825f, nullptr, nullptr, { &s_d5533065ce7c825f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_b1cc94eb5141adf8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248, 173,  65,  81, 235, 148, 204, 177,
     29,   0,   0,   0,   1,   0,   0,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  70, 108,  97, 116, 116, 101, 110,
    101, 100,  83, 116, 114, 117,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1cc94eb5141adf8 = b_b1cc94eb5141adf8.words;
#if !CAPNP_LITE
static const uint16_t m_b1cc94eb5141adf8[] = {0};
static const uint16_t i_b1cc94eb5141adf8[] = {0};
const ::capnp::_::RawSchema s_b1cc94eb5141adf8 = {
  0xb1cc94eb5141adf8, b_b1cc94eb5141adf8.words, 36, nullptr, m_b1cc94eb5141adf8,
  0, 1, i_b1cc94eb5141adf8, nullptr, nullptr, { &s_b1cc94eb5141adf8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_eca76f3df6b22dbb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187,  45, 178, 246,  61, 111, 167, 236,
     29,   0,   0,   0,   2,   0,   0,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  74, 115, 111, 110,  65, 110, 110,
    111, 116,  97, 116, 101, 100,  69, 110,
    117, 109,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  34,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  34,   0,   0,   0,
     65,   0,   0,   0,  31,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
     98,  97, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 122,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
    114, 101, 110,  97, 109, 101, 100,  45,
     98,  97, 122,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 120,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eca76f3df6b22dbb = b_eca76f3df6b22dbb.words;
#if !CAPNP_LITE
static const uint16_t m_eca76f3df6b22dbb[] = {1, 2, 0, 3};
const ::capnp::_::RawSchema s_eca76f3df6b22dbb = {
  0xeca76f3df6b22dbb, b_eca76f3df6b22dbb.words, 57, nullptr, m_eca76f3df6b22dbb,
  0, 4, nullptr, nullptr, nullptr, { &s_eca76f3df6b22dbb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(TestJsonAnnotatedEnum_eca76f3df6b22dbb, eca76f3df6b22dbb);
static const ::capnp::_::AlignedData<58> b_e36a2dc2a7ba9f0a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     10, 159, 186, 167, 194,  45, 106, 227,
     29,   0,   0,   0,   1,   0,   1,   0,
    201, 228,  51,  67, 207,   5, 212, 201,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  45, 116, 101, 115, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  66,  97, 115, 101,  54,  52,  85,
    110, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
     41,   0,   0,   0,  31,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
     75,  62,  37,  10,  69, 121, 216, 215,
      4,   0,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 114,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e36a2dc2a7ba9f0a = b_e36a2dc2a7ba9f0a.words;
#if !CAPNP_LITE
static const uint16_t m_e36a2dc2a7ba9f0a[] = {1, 0};
static const uint16_t i_e36a2dc2a7ba9f0a[] = {0, 1};
const ::capnp::_::RawSchema s_e36a2dc2a7ba9f0a = {
  0xe36a2dc2a7ba9f0a, b_e36a2dc2a7ba9f0a.words, 58, nullptr, m_e36a2dc2a7ba9f0a,
  0, 2, i_e36a2dc2a7ba9f0a, nullptr, nullptr, { &s_e36a2dc2a7ba9f0a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp {

// TestJsonAnnotations
constexpr uint16_t TestJsonAnnotations::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AGroup
constexpr uint16_t TestJsonAnnotations::AGroup::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AGroup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AGroup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AGroup::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AGroup::FlatBaz
constexpr uint16_t TestJsonAnnotations::AGroup::FlatBaz::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AGroup::FlatBaz::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AGroup::FlatBaz::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AGroup::FlatBaz::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AGroup::DoubleFlat
constexpr uint16_t TestJsonAnnotations::AGroup::DoubleFlat::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AGroup::DoubleFlat::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AGroup::DoubleFlat::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AGroup::DoubleFlat::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::PrefixedGroup
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::PrefixedGroup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::PrefixedGroup::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::PrefixedGroup::Baz
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::Baz::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::Baz::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::PrefixedGroup::Baz::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::PrefixedGroup::Baz::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::PrefixedGroup::MorePrefix
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::MorePrefix::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::PrefixedGroup::MorePrefix::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::PrefixedGroup::MorePrefix::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::PrefixedGroup::MorePrefix::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AUnion
constexpr uint16_t TestJsonAnnotations::AUnion::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AUnion::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AUnion::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AUnion::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AUnion::Foo
constexpr uint16_t TestJsonAnnotations::AUnion::Foo::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AUnion::Foo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AUnion::Foo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AUnion::Foo::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::AUnion::Bar
constexpr uint16_t TestJsonAnnotations::AUnion::Bar::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::AUnion::Bar::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::AUnion::Bar::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::AUnion::Bar::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::SimpleGroup
constexpr uint16_t TestJsonAnnotations::SimpleGroup::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::SimpleGroup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::SimpleGroup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::SimpleGroup::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::BUnion
constexpr uint16_t TestJsonAnnotations::BUnion::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::BUnion::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::BUnion::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::BUnion::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations::UnionWithVoid
constexpr uint16_t TestJsonAnnotations::UnionWithVoid::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations::UnionWithVoid::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations::UnionWithVoid::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations::UnionWithVoid::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations2
constexpr uint16_t TestJsonAnnotations2::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations2::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations2::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestJsonAnnotations3
constexpr uint16_t TestJsonAnnotations3::_capnpPrivate::dataWordSize;
constexpr uint16_t TestJsonAnnotations3::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestJsonAnnotations3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestJsonAnnotations3::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestFlattenedStruct
constexpr uint16_t TestFlattenedStruct::_capnpPrivate::dataWordSize;
constexpr uint16_t TestFlattenedStruct::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestFlattenedStruct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestFlattenedStruct::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestBase64Union
constexpr uint16_t TestBase64Union::_capnpPrivate::dataWordSize;
constexpr uint16_t TestBase64Union::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestBase64Union::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestBase64Union::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

